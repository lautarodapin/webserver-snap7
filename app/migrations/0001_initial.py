# Generated by Django 3.1.7 on 2021-03-25 16:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='Lectura', max_length=255, verbose_name='Nombre')),
                ('area', models.PositiveSmallIntegerField(choices=[(129, 'Entrada'), (130, 'Salida'), (131, 'Marca'), (132, 'DB'), (28, 'Contador'), (29, 'Timer')], verbose_name='Area')),
                ('numero', models.PositiveSmallIntegerField(help_text='En el caso de E/M/A el numero debe ser 0', verbose_name='Numero')),
                ('offset', models.PositiveSmallIntegerField(help_text='Maximo offset del area a leer', verbose_name='Offset')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('mod_at', models.DateTimeField(auto_now=True, verbose_name='Modificado')),
            ],
        ),
        migrations.CreateModel(
            name='Plc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(unique=True, verbose_name='IP')),
                ('rack', models.PositiveSmallIntegerField(blank=True, verbose_name='Rack')),
                ('slot', models.PositiveSmallIntegerField(blank=True, verbose_name='Slot')),
                ('port', models.PositiveSmallIntegerField(blank=True, default=102, verbose_name='Port')),
                ('nombre', models.CharField(blank=True, help_text='Nombre alias', max_length=50, null=True, verbose_name='Nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, verbose_name='Nombre')),
                ('slug', models.SlugField(editable=False, null=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='Fila',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('byte', models.PositiveSmallIntegerField(verbose_name='Byte')),
                ('bit', models.PositiveSmallIntegerField(blank=True, help_text='Es requerido si el tipo de dato es `Bool`', null=True, verbose_name='Bit')),
                ('tipo_dato', models.CharField(choices=[('get_bool', 'Bool (1 bit)'), ('get_real', 'Real (4 bytes)'), ('get_int', 'Int (2 bytes)'), ('get_dword', 'Double Word (4 bytes)')], default='get_bool', help_text='Tipo de dato a leer', max_length=150, verbose_name='Tipo de dato')),
                ('db', models.ForeignKey(help_text='DB desde el cual se lee', on_delete=django.db.models.deletion.CASCADE, related_name='valor_db', to='app.area', verbose_name='Area (DB)')),
            ],
        ),
        migrations.CreateModel(
            name='Dato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creado')),
                ('mod_at', models.DateTimeField(auto_now=True, verbose_name='Modificado')),
                ('dato', models.BinaryField(blank=True, max_length=65536, null=True, verbose_name='Valor')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datos', to='app.area', verbose_name='Area')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='area',
            name='plc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lectura', to='app.plc', verbose_name='PLC'),
        ),
        migrations.AddField(
            model_name='area',
            name='tag',
            field=models.ManyToManyField(blank=True, related_name='lecturas', to='app.Tag', verbose_name='Tag'),
        ),
        migrations.AlterUniqueTogether(
            name='area',
            unique_together={('area', 'numero', 'plc')},
        ),
    ]
